# This is a workaround to pass the inputs around.
# See https://docs.github.com/en/actions/using-workflows/reusing-workflows#limitations
name: 'aod-set-inputs'

on:
  workflow_call:
    outputs:
      workload_identity_provider:
        description: 'The full identifier of the Workload Identity Provider, including the project number, pool name, and provider name.'
        value: ${{ jobs.set_envs.outputs.wif_provider }}
      service_account:
        description: 'Email address or unique identifier of the Google Cloud service account for which to generate credentials.'
        value: ${{ jobs.set_envs.outputs.wif_sa }}
      aod_cli_version:
        description: 'The version of AOD CLI.'
        value: ${{ jobs.set_envs.outputs.aod_cli_version }}
      go_version:
        description: 'The version of Golang.'
        value: ${{ jobs.set_envs.outputs.go_version }}


# Assign values to below envs.
env:
  WIF_PROVIDER: <YOUR WIF PROVIDER> # format: 'projects/<project ID>/locations/<resource location>/workloadIdentityPools/<pool name>/providers/github-provider'
  WIF_SERVICE_ACCOUNT: <YOUR WIF SERVICE ACCOUNT>
  AOD_CLI_VERSION: 'latest'
  GO_VERISON: '1.20'

jobs:
  set_envs:
    runs-on: ubuntu-latest
    # This job does not require any permissions.
    permissions: {}
    # Map step outputs to job outputs
    outputs:
      wif_provider: '${{ steps.wif.outputs.WIF_PROVIDER }}'
      wif_sa: '${{ steps.wif.outputs.WIF_SERVICE_ACCOUNT }}'
      aod_cli_version: '${{ steps.wif.outputs.AOD_CLI_VERSION }}'
      go_version: '${{ steps.wif.outputs.GO_VERISON }}'
    steps:
      - id: 'wif'
        run: |
          echo "WIF_PROVIDER=${{ env.WIF_PROVIDER }}" >> "$GITHUB_OUTPUT"
          echo "WIF_SERVICE_ACCOUNT=${{ env.WIF_SERVICE_ACCOUNT }}" >> "$GITHUB_OUTPUT"
          echo "AOD_CLI_VERSION=${{ env.AOD_CLI_VERSION }}" >> "$GITHUB_OUTPUT"
          echo "GO_VERISON=${{ env.GO_VERISON }}" >> "$GITHUB_OUTPUT"
# Copyright 2023 The Authors (see AUTHORS file)

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#      http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Workflow that expires/closes AOD PRs.
name: 'aod-expire'

on:
  schedule:
    # Change cron schedule here, currently it is every day at 1am.
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  expire:
    permissions:
      pull-requests: 'write'
      contents: 'read'
    uses: 'abcxyz/access-on-demand/.github/workflows/expire.yml@v0.1.2' # Change here to pin the tag or commit.
    with:
      repo: '${{ github.repository }}'
      # To specify expiry_hours (the number of hours to keep an AOD PR open
      # since last updated), change the repository variables.
      # Details: https://docs.github.com/en/actions/learn-github-actions/variables#creating-configuration-variables-for-a-repository
      expiry_hours: '${{ vars.expiry_hours || 24 }}'

  # Trigger cleanup for each of the closed/expired PRs, as they won't be
  # triggered automatically due to https://docs.github.com/en/actions/using-workflows/triggering-a-workflow#triggering-a-workflow-from-a-workflow
  cleanup:
    needs: 'expire'
    if: '${{ needs.expire.outputs.pulls != ''[]''}}'
    strategy:
      matrix:
        pull: '${{ fromJSON(needs.expire.outputs.pulls) }}'
    permissions:
      pull-requests: 'write'
      contents: 'write'
      id-token: 'write'
    uses: 'abcxyz/access-on-demand/.github/workflows/cleanup.yml@v0.1.2'
    # To specify input vars, change the repository variables.
    # Details: https://docs.github.com/en/actions/learn-github-actions/variables#creating-configuration-variables-for-a-repository
    with:
      workload_identity_provider: '${{ vars.workload_identity_provider }}'
      service_account: '${{ vars.service_account }}'
      aod_cli_version: '${{ vars.aod_cli_version || ''latest'' }}'
      go_version: '${{ vars.go_version || ''1.21'' }}'
      pr_number: '${{ matrix.pull.pullNumber }}'
      branch: '${{ matrix.pull.pullBranch }}'
